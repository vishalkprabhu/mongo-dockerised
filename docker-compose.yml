version: "3"

services:
  mongo1:
    image: mongo
    restart: always
    container_name: mongo1
    ports:
      - 27018:27018
    volumes:
      - ./mongo1/data:/data/db
      - ./mongo1/config:/data/configdb
      - ./.env:/usr/src/app/.env # added for dotenv
      - ./mongo-keyfile:/mongo-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_REPLICA_SET_NAME: ${MONGO_REPLICA_SET_NAME}
      MONGO_PORT: 27018
      MONGO_ADVERTISED_HOSTNAME: mongo1
    networks:
      - backend
    entrypoint: [ "/usr/bin/mongod", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1", "--keyFile", "/mongo-keyfile" ]

  mongo2:
    image: mongo
    restart: always
    container_name: mongo2
    volumes:
      - ./mongo2/data:/data/db
      - ./mongo2/config:/data/configdb
      - ./.env:/usr/src/app/.env # added for dotenv
      - ./mongo-keyfile:/mongo-keyfile

    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_REPLICA_SET_NAME: ${MONGO_REPLICA_SET_NAME}
      MONGO_PORT: 27018
      MONGO_ADVERTISED_HOSTNAME: mongo2
    depends_on:
      - mongo1
    networks:
      - backend
    entrypoint: [ "/usr/bin/mongod", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1", "--keyFile", "/mongo-keyfile" ]

  mongo-initiator:
    image: mongo
    restart: on-failure
    container_name: mongo-initiator
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_REPLICA_SET_NAME: ${MONGO_REPLICA_SET_NAME}
      MONGO_PORT: 27018
    command: mongo-initiator.sh
    networks:
      - backend
    volumes:
      - ./.env:/usr/src/app/.env # added for dotenv
    depends_on:
      - mongo1
      - mongo2

  app:
    build: .
    image: api-server
    container_name: app
    restart: always
    environment:
      NODE_ENV: development
      MONGO_URL: mongodb://mongodb1:27018,mongodb2:27018/${MONGO_INITDB_DATABASE}?replicaSet=${MONGO_REPLICA_SET_NAME}
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
      - ./.env:/usr/src/app/.env # added for dotenv
    ports:
      - "3000:3000"
    depends_on:
      - mongo-initiator
    networks:
      - backend
      - frontend

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # changed to use nginx.conf instead of default.conf
    depends_on:
      - app
    networks:
      - frontend
      - backend

  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger
    restart: always
    ports:
      - "8080:8080"
    environment:
      SWAGGER_JSON: /usr/src/app/docs/swagger.json  
    volumes:
      - ./docs/swagger.json:/usr/src/app/docs/swagger.json
    networks:
      - frontend

volumes:
  node_modules:

networks:
  frontend:
  backend:
    driver: bridge
